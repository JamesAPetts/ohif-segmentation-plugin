!function(n,e){"object"==typeof exports&&"object"==typeof module?module.exports=e(require("cornerstone-tools"),require("cornerstone-core"),require("cornerstone-math")):"function"==typeof define&&define.amd?define("ohif-segmentation-plugin",["cornerstone-tools","cornerstone-core","cornerstone-math"],e):"object"==typeof exports?exports["ohif-segmentation-plugin"]=e(require("cornerstone-tools"),require("cornerstone-core"),require("cornerstone-math")):n["ohif-segmentation-plugin"]=e(n["cornerstone-tools"],n["cornerstone-core"],n["cornerstone-math"])}("undefined"!=typeof self?self:this,function(n,e,o){return function(n){var e={};function o(t){if(e[t])return e[t].exports;var a=e[t]={i:t,l:!1,exports:{}};return n[t].call(a.exports,a,a.exports,o),a.l=!0,a.exports}return o.m=n,o.c=e,o.d=function(n,e,t){o.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:t})},o.r=function(n){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},o.t=function(n,e){if(1&e&&(n=o(n)),8&e)return n;if(4&e&&"object"==typeof n&&n&&n.__esModule)return n;var t=Object.create(null);if(o.r(t),Object.defineProperty(t,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var a in n)o.d(t,a,function(e){return n[e]}.bind(null,a));return t},o.n=function(n){var e=n&&n.__esModule?function(){return n.default}:function(){return n};return o.d(e,"a",e),e},o.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},o.p="",o(o.s=7)}([function(e,o){e.exports=n},function(n,o){n.exports=e},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(){var n=(new Date).getTime();"undefined"!=typeof performance&&"function"==typeof performance.now&&(n+=performance.now());return"x.x.x.x.x.x.xxxx.xxx.x.x.xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx".replace(/[xy]/g,function(e){var o=(n+16*Math.random())%16|0;return n=Math.floor(n/16),("x"===e?o:3&o|8).toString(16)})},n.exports=e.default},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){if(!n)return;var e=n.image.imageId;return a.default.metaData.get("generalSeriesModule",e).seriesInstanceUID};var t,a=(t=o(0))&&t.__esModule?t:{default:t};n.exports=e.default},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t,a=o(0),i=(t=o(11))&&t.__esModule?t:{default:t};function r(n){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function c(n,e){for(var o=0;o<e.length;o++){var t=e[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function d(n,e){return!e||"object"!==r(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function l(n,e){return(l=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}var u=a.store.modules.brush,C=function(n){function e(){var n,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=Object.assign({},o);return(n=d(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t))).initialConfiguration=t,n}var o,t,r;return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&l(n,e)}(e,a.BrushTool),o=e,(t=[{key:"_startPainting",value:function(n){var e=n.detail,o=e.element,t=u.getters.getAndCacheLabelmap2D(o),a=t.labelmap3D,r=t.currentImageIdIndex,c=t.activeLabelmapIndex,d=this._isCtrlDown(e)||this.configuration.alwaysEraseOnClick;this.paintEventData={labelmap3D:a,currentImageIdIndex:r,activeLabelmapIndex:c,shouldErase:d};var l=a.activeSegmentIndex,C=a.metadata[l];C||(C=(0,i.default)("Unnamed Segment"),u.setters.metadata(o,c,l,C)),e.currentPoints&&this._paint(n),this._drawing=!0,this._startListeningForMouseUp(o)}}])&&c(o.prototype,t),r&&c(o,r),e}();e.default=C,n.exports=e.default},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t=o(0),a=c(o(1)),i=c(o(4)),r=c(o(13));function c(n){return n&&n.__esModule?n:{default:n}}function d(n){return(d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function l(n,e){return function(n){if(Array.isArray(n))return n}(n)||function(n,e){var o=[],t=!0,a=!1,i=void 0;try{for(var r,c=n[Symbol.iterator]();!(t=(r=c.next()).done)&&(o.push(r.value),!e||o.length!==e);t=!0);}catch(n){a=!0,i=n}finally{try{t||null==c.return||c.return()}finally{if(a)throw i}}return o}(n,e)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance")}()}function u(n,e){for(var o=0;o<e.length;o++){var t=e[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function C(n,e){return!e||"object"!==d(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function s(n,e){return(s=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}var m=t.store.modules.brush,p=(0,t.importInternalModule)("util/brushUtils"),S=p.getCircle,g=p.drawBrushPixels,D=function(n){function e(){var n,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=Object.assign({},o);return(n=C(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t))).initialConfiguration=t,n}var o,c,d;return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&s(n,e)}(e,i.default),o=e,(c=[{key:"preMouseDownCallback",value:function(n){return this.activeGateRange=m.getters.activeGateRange(),this._startPainting(n),!0}},{key:"_paint",value:function(n){var e=n.detail,o=e.element,i=e.image,r=i.rows,c=i.columns,d=e.currentPoints.image,l=d.x,u=d.y;if(!(l<0||l>c||u<0||u>r)){var C=m.state.radius,s=this._gateCircle(i,S(C,r,c,l,u)),p=this.paintEventData,D=p.labelmap3D,T=p.currentImageIdIndex,M=p.activeLabelmapIndex,h=p.shouldErase;g(s,D,T,c,h),a.default.triggerEvent(o,t.EVENTS.LABELMAP_MODIFIED,{activeLabelmapIndex:M}),a.default.updateImage(n.detail.element)}}},{key:"_gateCircle",value:function(n,e){for(var o=n.rows,t=n.getPixelData(),a=this.activeGateRange,i=n.slope||1,r=n.intercept||0,c=[],d=0;d<e.length;d++){var l=t[e[d][0]+e[d][1]*o];(l=l*i+r)>=a[0]&&l<=a[1]&&c.push(e[d])}return this._cleanGatedCircle(e,c)}},{key:"_getEdgePixels",value:function(n){for(var e=[],o=n.length,t=n[0].length,a=0;a<n.length;a++)n[a][0]&&(e.push([a,0]),e.push([a,t-1]));for(var i=1;i<t-1;i++)for(var r=0;r<n.length;r++)if(n[r][i]){e.push([r,i]),e.push([o-1-r,i]);break}return e}},{key:"_cleanGatedCircle",value:function(n,e){var o=this._getBoundingBoxOfCircle(n),t=o.max,a=o.min,i=t[0]-a[0]+1,r=t[1]-a[1]+1,c=this._boxGatedCircle(n,e,a,i,r);function d(n,e){return c[n][e]}this._floodFillEmptyRegionsFromEdges(c,d);for(var l=this._findHolesAndRegions(n,c,d,a),u=l.holes,C=l.regions,s=this._getAreaOfLargestRegion(C),p=0;p<C.length;p++){var S=C[p];if(S.length<=m.state.strayRemove/100*s)for(var g=0;g<S.length;g++)c[S[g][0]][S[g][1]]=3}for(var D=0;D<u.length;D++){var T=u[D];if(T.length<=m.state.holeFill/100*s)for(var M=0;M<T.length;M++)c[T[M][0]][T[M][1]]=5}for(var h=[],f=0;f<i;f++)for(var y=0;y<r;y++)5===c[f][y]&&h.push([f+a[0],y+a[1]]);return h}},{key:"_getBoundingBoxOfCircle",value:function(n){for(var e=[n[0][0],n[0][1]],o=[n[0][0],n[0][1]],t=0;t<n.length;t++){var a=l(n[t],2),i=a[0],r=a[1];i>e[0]?e[0]=i:i<o[0]&&(o[0]=i),r>e[1]?e[1]=r:r<o[1]&&(o[1]=r)}return{max:e,min:o}}},{key:"_boxGatedCircle",value:function(n,e,o,t,a){for(var i=[],r=0;r<t;r++)i[r]=new Uint8ClampedArray(a);for(var c=0;c<n.length;c++){var d=n[c][0]-o[0],l=n[c][1]-o[1];i[d][l]=1}for(var u=0;u<e.length;u++){var C=e[u][0]-o[0],s=e[u][1]-o[1];i[C][s]=2}return i}},{key:"_floodFillEmptyRegionsFromEdges",value:function(n,e){for(var o=this._getEdgePixels(n),t=0;t<o.length;t++){var a=o[t][0],i=o[t][1];if(1===n[a][i])for(var c=(0,r.default)({getter:e,seed:[a,i]}).flooded,d=0;d<c.length;d++)n[c[d][0]][c[d][1]]=3}}},{key:"_findHolesAndRegions",value:function(n,e,o,t){for(var a=[],i=[],c=0;c<n.length;c++){var d=n[c][0]-t[0],l=n[c][1]-t[1];if(1===e[d][l]){for(var u=(0,r.default)({getter:o,seed:[d,l]}).flooded,C=0;C<u.length;C++)e[u[C][0]][u[C][1]]=4;a.push(u)}else if(2===e[d][l]){for(var s=(0,r.default)({getter:o,seed:[d,l]}).flooded,m=0;m<s.length;m++)e[s[m][0]][s[m][1]]=5;i.push(s)}}return{holes:a,regions:i}}},{key:"_getAreaOfLargestRegion",value:function(n){for(var e=0,o=0;o<n.length;o++)n[o].length>e&&(e=n[o].length);return e}}])&&u(o.prototype,c),d&&u(o,d),e}();e.default=D,n.exports=e.default},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n,e){for(var o=(0,r.default)(n,e),t=o.ROIContourData,a=o.interpolationList,i=0;i<a.length;i++)a[i]&&C(a[i].list,a[i].pair,t)};var t=o(0),a=o(17),i=c(o(2)),r=c(o(18));function c(n){return n&&n.__esModule?n:{default:n}}var d=t.globalImageIdSpecificToolStateManager,l=.2,u=t.store.modules;function C(n,e,o){var t=M(o[e[0]].contours[0].handles.points),r=M(o[e[1]].contours[0].handles.points),c=function(n,e){var o=D(n),t=D(e),a=Math.max(Math.ceil(o[o.length-1]/l),Math.ceil(t[t.length-1]/l)),i=T(o),r=T(t),c=a+e.x.length,d=a+n.x.length,u=g(c,i),C=g(d,r),M=S(n,c),h=S(e,d),f=p(u,M),y=p(C,h),I=m(n,f),R=m(e,y);return function(n,e){for(var o=n.x.length,t={startingNode:0,totalSquaredXYLengths:1/0},a=0;a<o;a++){for(var i=a,r=0,c=0;c<o;c++)r+=Math.pow(n.x[i]-e.x[c],2)+Math.pow(n.y[i]-e.y[c],2),++i===o&&(i=0);r<t.totalSquaredXYLengths&&(t.totalSquaredXYLengths=r,t.startingNode=a)}var d=t.startingNode;s(n.x,d),s(n.y,d),s(n.I,d)}(I,R),function(n,e){for(var o={x:[],y:[],I:[]},t={x:[],y:[],I:[]},a=0;a<n.x.length;a++)(n.I[a]||e.I[a])&&(o.x.push(n.x[a]),o.y.push(n.y[a]),o.I.push(n.I[a]),t.x.push(e.x[a]),t.y.push(e.y[a]),t.I.push(e.I[a]));return{c1Interp:o,c2Interp:t}}(I,R)}(t,r),C=c.c1Interp,h=c.c2Interp;n.forEach(function(n){!function(n,e,o,t,r,c){var l=(o-t[0])/(t[1]-t[0]),C=function(n,e,o,t){for(var a={x:[],y:[]},i=t?n.I:e.I,r=0;r<n.x.length;r++)i[r]&&(a.x.push((1-o)*n.x[r]+o*e.x[r]),a.y.push((1-o)*n.y[r]+o*e.y[r]));return a}(n,e,l,c),s=r[t[0]].contours[0];r[o].contours?function(n,e,o){var t,i=d.saveToolState()[e];if(!i)throw new Error("Image toolstate does not exist. This should not be reached in this case!");for(var r=0;r<i.freehandRoi.data.length;r++)if(i.freehandRoi.data[r].ROIContourUid===o.ROIContourUid){t=r;break}for(var c=i.freehandRoi.data[t],l=[],u=0;u<n.x.length;u++)l.push({x:n.x[u],y:n.y[u]});var C=new a.Polygon(l,null,c.seriesInstanceUid,c.structureSetUid,c.ROIContourUid,c.uid,null,!0);i.freehandRoi.data[t]=C.getFreehandToolData(!1)}(C,r[o].imageId,s):function(n,e,o){for(var t=[],r=0;r<n.x.length;r++)t.push({x:n.x[r],y:n.y[r]});var c=new a.Polygon(t,null,o.seriesInstanceUid,o.structureSetUid,o.ROIContourUid,(0,i.default)(),null,!0),l=d.saveToolState();l[e]||(l[e]={});var C=l[e];C.freehandRoi?C.freehandRoi.data||(C.freehandRoi.data=[]):(C.freehandRoi={},C.freehandRoi.data=[]);C.freehandRoi.data.push(c.getFreehandToolData(!1)),u.freehand3D.setters.incrementPolygonCount(o.seriesInstanceUid,o.structureSetUid,o.ROIContourUid)}(C,r[o].imageId,s)}(C,h,n,e,o,t.x.length>r.x.length)})}function s(n,e){return e-=n.length*Math.floor(e/n.length),n.push.apply(n,n.splice(0,e)),n}function m(n,e){for(var o={x:[],y:[],I:[]},t=0;t<n.x.length-1;t++){o.x.push(n.x[t]),o.y.push(n.y[t]),o.I.push(!0);for(var a=(n.x[t+1]-n.x[t])/(e[t]+1),i=(n.y[t+1]-n.y[t])/(e[t]+1),r=0;r<e[t]-1;r++)o.x.push(o.x[o.x.length-1]+a),o.y.push(o.y[o.y.length-1]+i),o.I.push(!1)}return o}function p(n,e){for(var o=[],t=0;t<n.length;++t)o[t]=t;o.sort(function(e,o){return n[e]<n[o]?-1:n[e]>n[o]});for(var a=[],i=0;i<e.length;i++)a.push(e[o[i]]);for(var r=a.reduce(function(n,e,o){return e&&n.push(o),n},[]),c=[],d=0;d<r.length-1;d++)c.push(r[d+1]-r[d]);return c}function S(n,e){for(var o=[],t=0;t<e-2;t++)o.push(!1);for(var a=0;a<n.x.length;a++)o.push(!0);return o}function g(n,e){for(var o=1/(n-1),t=[o],a=1;a<n-2;a++)t.push(t[t.length-1]+o);return t.concat(e)}function D(n){for(var e=[0],o=1;o<n.x.length;o++){var t=Math.sqrt(Math.pow(n.x[o]-n.x[o-1],2)+Math.pow(n.y[o]-n.y[o-1],2));e.push(e[o-1]+t)}return e}function T(n){for(var e=[],o=0;o<n.length;o++)e.push(n[o]/n[n.length-1]);return e}function M(n){for(var e={x:[],y:[]},o=0;o<n.length;o++)e.x[o]=n[o].x,e.y[o]=n[o].y;return e.x.push(e.x[0]),e.y.push(e.y[0]),function(n){for(var e=n.x.length,o=n.x.reduce(h)/e,t=0,a=0,i=1,r=2;a<e;a++)t+=(n.x[i]-o)*(n.y[r]-n.y[a]),++i>=e&&(i=0),++r>=e&&(r=0);t>0&&(n.x.reverse(),n.y.reverse())}(e),e}function h(n,e){return n+e}n.exports=e.default},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t,a=(t=o(8))&&t.__esModule?t:{default:t};var i="setToolActive",r={id:"ohif-segmentation-extension",preRegistration:function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};(0,a.default)(n)},getCommandsModule:function(){return{defaultContext:"VIEWER",actions:{},definitions:[]}},getToolbarModule:function(){return{definitions:[{id:"freehandRoiTools",label:"ROI",icon:"level",buttons:[{id:"FreehandRoi",label:"Draw",icon:"level",type:i,commandName:"enableFreehandRoi"},{id:"FreehandRoiSculptor",label:"Sculpt",icon:"level",type:i,commandName:"enableFreehandRoiSculptor"}]},{id:"brushTools",label:"Segment",icon:"level",buttons:[{id:"Brush",label:"Manual",icon:"level",type:i,commandName:"enabledBrush"},{id:"Brush3DHUGatedTool",label:"Smart CT",icon:"level",type:i,commandName:"enabledBrush3DHUGatedTool"},{id:"Brush3DAutoGatedTool",label:"Auto",icon:"level",type:i,commandName:"enabledBrush3DAutoGatedTool"}]}],defaultContext:"ACTIVE_VIEWPORT::CORNERSTONE"}},getPanelModule:function(){return null}};e.default=r,n.exports=e.default},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(){var n=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{},e=s.brush,o=Object.assign({},m,n);(0,i.default)(e,o),(0,t.register)("module","freehand3D",a.default);var C=s.freehand3D;C.state.interpolate=o.interpolate,C.state.displayStats=o.showFreehandStats,(0,t.addTool)(r.default,{name:o.brush3dToolName}),(0,t.addTool)(c.default,{name:o.brush3DHUGatedToolName}),(0,t.addTool)(d.default,{name:o.brush3DAutoGatedTool}),(0,t.addTool)(l.default,{name:o.freehandRoi3DTool}),(0,t.addTool)(u.default,{name:o.freehandRoi3DSculptorTool,referencedToolName:o.freehandRoi3DTool})};var t=o(0),a=C(o(9)),i=C(o(10)),r=C(o(4)),c=C(o(5)),d=C(o(14)),l=C(o(15)),u=C(o(19));function C(n){return n&&n.__esModule?n:{default:n}}var s=t.store.modules,m={maxRadius:64,holeFill:2,holeFillRange:[0,20],strayRemove:5,strayRemoveRange:[0,99],interpolate:!1,showFreehandStats:!1,brush3dToolName:"Brush3DTool",brush3DHUGatedToolName:"Brush3DHUGatedTool",brush3DAutoGatedTool:"Brush3DAutoGatedTool",freehandRoi3DTool:"FreehandRoi3DTool",freehandRoi3DSculptorTool:"FreehandRoi3DSculptorTool",gates:[{name:"adipose",range:[-190,-30]},{name:"muscle",range:[-29,150]},{name:"custom",range:[0,100]}]};n.exports=e.default},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.getNextColor=M,e.default=void 0;var t=r(o(1)),a=r(o(2)),i=r(o(3));function r(n){return n&&n.__esModule?n:{default:n}}var c={seriesCollection:[],interpolate:!1,displayStats:!1};function d(n,e){if(!n)throw new Error("Insufficient information provided, must provide ".concat(e,"."))}function l(n){return d(n,"seriesInstanceUid"),c.seriesCollection.find(function(e){return e.uid===n})}function u(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"DEFAULT";d(e,"structureSetUid");var o=l(n);if(o)return o.structureSetCollection.find(function(n){return n.uid===e})}function C(n,e,o){d(o,"ROIContourUid");var t=u(n,e);if(t)return t.ROIContourCollection.find(function(n){return n&&n.uid===o})}function s(n){d(n);var e={uid:n,activeStructureSetIndex:null,structureSetCollection:[]};c.seriesCollection.push(e),m(n,"default",{uid:"DEFAULT"})}function m(n,e){var o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:{};d(e,"name");var t=l(n);t||(s(n),t=l(n));var i={uid:o.uid?o.uid:(0,a.default)(),name:e,isLocked:!!o.isLocked&&o.isLocked,visible:!o.visible||o.visible,activeROIContourIndex:void 0!==o.activeROIContourIndex?o.activeROIContourIndex:null,ROIContourCollection:[]};t.structureSetCollection.push(i)}function p(n,e,o){var t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:{};d(o,"name");var i=u(n,e);if(!i)throw new Error("Cannot generate ROIContour, as the structureSet with ".concat(e," does not exist."));var r={uid:t.uid?t.uid:(0,a.default)(),name:o,color:t.color?t.color:M(),polygonCount:t.polygonCount?t.polygonCount:0};return i.ROIContourCollection.push(r),r.uid}var S={series:s,structureSet:m,ROIContour:p,ROIContourAndSetIndexActive:function(n,e,o){p(n,e,o,arguments.length>3&&void 0!==arguments[3]?arguments[3]:{});var t=u(n,e),a=t.ROIContourCollection.length-1;return t.activeROIContourIndex=a,a},deleteROIFromStructureSet:function(n,e,o){var t=u(n,e).ROIContourCollection,a=t.findIndex(function(n){return n.uid===o});t.splice(a,1)},deleteStructureSet:function(n,e){var o=l(n).structureSetCollection,t=o.findIndex(function(n){return n.uid===e});o.splice(t,1)},structureSetName:function(n,e,o){d(n,"name"),u(e,o).name=n},ROIContourName:function(n,e,o,t){d(n,"name"),C(e,o,t).name=n},activeStructureSetIndex:function(n,e){d(n,"index"),l(e).activeStructureSetIndex=n},activeStructureSet:function(n,e){d(e,"structureSetUid");var o=l(n),t=o.structureSetCollection.findIndex(function(n){return n.uid===e});o.activeStructureSetIndex=t},activeROIContourIndex:function(n,e){u(e,arguments.length>2&&void 0!==arguments[2]?arguments[2]:"DEFAULT").activeROIContourIndex=n},activeROIContour:function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"DEFAULT",o=arguments[2];d(o,"ROIContourUid");var t=u(n,e),a=t.ROIContourCollection.findIndex(function(n){return n.uid===o});t.activeROIContourIndex=a},incrementPolygonCount:function(n,e,o){C(n,e,o).polygonCount++},decrementPolygonCount:function(n,e,o){C(n,e,o).polygonCount--},toggleInterpolate:function(){c.interpolate=!c.interpolate},toggleDisplayStats:function(){c.displayStats=!c.displayStats}};var g={state:c,enabledElementCallback:function(n){var e=t.default.getEnabledElement(n);if(e.image){var o=(0,i.default)(e);l(o)||s(o)}},getters:{series:l,structureSet:u,ROIContour:C,ROIContourIndex:function(n,e,o){d(o,"ROIContourUid");var t=u(n,e);if(t)return t.ROIContourCollection.findIndex(function(n){return n.uid===o})},activeStructureSetIndex:function(n){return l(n).activeStructureSetIndex},activeROIContourIndex:function(n){return u(n,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"DEFAULT").activeROIContourIndex},activeROIContour:function(n){var e=u(n,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"DEFAULT"),o=e.activeROIContourIndex;if(null!=o)return e.ROIContourCollection[o]}},setters:S};e.default=g;var D=["cornflowerblue","firebrick","goldenrod","blueviolet","indianred","orange","mediumturquoise","lightcoral","khaki","darkmagenta","lightseagreen","tomato","aquamarine","darksalmon","moccasin","orchid","skyblue","peru"],T=D.length;function M(){return++T>=D.length&&(T=0),D[T]}},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n,e){var o=n.state,t=n.getters,a=n.setters;o.holeFill=e.holeFill,o.holeFillRange=e.holeFillRange,o.strayRemove=e.strayRemove,o.strayRemoveRange=e.strayRemoveRange,o.gates=e.gates,o.activeGate=o.gates[0].name,o.maxRadius=e.maxRadius,t.activeGateRange=function(){var n=o.activeGate,e=o.gates,t=e.findIndex(function(e){return e.name===n});return o.gates[t].range},t.customGateRange=function(){var n=o.gates,e=n.findIndex(function(n){return"custom"===n.name});return o.gates[e].range},a.customGateRange=function(n,e){var t=o.gates,a=t.findIndex(function(n){return"custom"===n.name}),i=o.gates[a].range;null!==n&&(i[0]=n),null!==e&&(i[1]=e)},t.importMetadata=function(e){if(n.state.import&&n.state.import[e])return n.state.import[e]},a.importMetadata=function(e,o){n.state.import||(n.state.import={}),n.state.import[e]=o},a.importModified=function(e){var o=n.state.import[e];o.modified||(o.modified=!0)}},n.exports=e.default},function(n,e,o){"use strict";var t;Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n){var e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"T-D0050",o=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"T-D0050",t=arguments[3],i=a.find(function(n){return n.CodeValue===e}),r=i.Type.find(function(n){return n.CodeValue===o}),c={SegmentedPropertyCategoryCodeSequence:{CodeValue:i.CodeValue,CodingSchemeDesignator:i.CodingSchemeDesignator,CodeMeaning:i.CodeMeaning},SegmentLabel:n,SegmentAlgorithmType:"MANUAL",SegmentedPropertyTypeCodeSequence:{CodeValue:r.CodeValue,CodingSchemeDesignator:r.CodingSchemeDesignator,CodeMeaning:r.CodeMeaning}};if(t){var d=r.Modifier.find(function(n){return n.CodeValue===t});c.SegmentedPropertyTypeCodeSequence.SegmentedPropertyTypeModifierCodeSequence={CodeValue:d.CodeValue,CodingSchemeDesignator:d.CodingSchemeDesignator,CodeMeaning:d.CodeMeaning},c.RecommendedDisplayCIELabValue=d.recommendedDisplayRGBValue}else c.RecommendedDisplayCIELabValue=r.recommendedDisplayRGBValue;return c};var a=((t=o(12))&&t.__esModule?t:{default:t}).default.SegmentationCodes.Category;n.exports=e.default},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t=JSON.parse('{\n  "SegmentationCategoryTypeContextName": "Segmentation category and type - 3D Slicer General Anatomy list",\n  "@schema": "https://raw.githubusercontent.com/qiicr/dcmqi/master/doc/schemas/segment-context-schema.json#",\n  "SegmentationCodes": {\n    "Category": [\n      {\n        "CodeMeaning": "Tissue",\n        "CodingSchemeDesignator": "SRT",\n        "SNOMEDCTConceptID": "85756007",\n        "cid": "7051",\n        "UMLSConceptUID": "C0040300",\n        "CodeValue": "T-D0050",\n        "contextGroupName": "Segmentation Property Categories",\n        "Type": [\n          {\n            "recommendedDisplayRGBValue": [\n              128,\n              174,\n              128\n            ],\n            "CodeMeaning": "Tissue",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "tissue",\n            "cid": "7166",\n            "UMLSConceptUID": "C0040300",\n            "CodeValue": "T-D0050",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "85756007"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              216,\n              101,\n              79\n            ],\n            "CodeMeaning": "Artery",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "artery",\n            "cid": "7166",\n            "UMLSConceptUID": "C0555806",\n            "CodeValue": "T-41066",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "275989006"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              230,\n              220,\n              70\n            ],\n            "CodeMeaning": "Body fat",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "fat",\n            "cid": "7166",\n            "UMLSConceptUID": "C0344335",\n            "CodeValue": "F-03D38",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "248300009"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              241,\n              214,\n              145\n            ],\n            "CodeMeaning": "Bone",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "bone",\n            "cid": "7166",\n            "UMLSConceptUID": "C0262950",\n            "CodeValue": "T-D016E",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "272673000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              183,\n              156,\n              220\n            ],\n            "CodeMeaning": "Capillary",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "capillary",\n            "cid": "7166",\n            "UMLSConceptUID": "C0006901",\n            "CodeValue": "T-40050",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "20982000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              111,\n              184,\n              210\n            ],\n            "CodeMeaning": "Cartilage",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "cartilage",\n            "cid": "7166",\n            "UMLSConceptUID": "C0007301",\n            "CodeValue": "T-D021B",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "309312004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              111,\n              184,\n              210\n            ],\n            "CodeMeaning": "Connective tissue",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "connective tissue",\n            "cid": "7166",\n            "UMLSConceptUID": "C0009780",\n            "CodeValue": "T-1A200",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "21793004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              183,\n              214,\n              211\n            ],\n            "CodeMeaning": "Ligament",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "ligament",\n            "cid": "7166",\n            "UMLSConceptUID": "C0023685",\n            "CodeValue": "T-18010",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "52082005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              68,\n              172,\n              100\n            ],\n            "CodeMeaning": "Lymph node",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "lymph node",\n            "cid": "7166",\n            "UMLSConceptUID": "C0024204",\n            "CodeValue": "T-C4000",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "59441001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              111,\n              197,\n              131\n            ],\n            "CodeMeaning": "Lymphatic vessel",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "lymphatic vessel",\n            "cid": "7166",\n            "UMLSConceptUID": "C0229889",\n            "CodeValue": "T-C6010",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "83555006"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              178,\n              212,\n              242\n            ],\n            "CodeMeaning": "Meniscus",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "meniscus",\n            "cid": "7166",\n            "UMLSConceptUID": "C0224498",\n            "CodeValue": "T-15009",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "74135004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              192,\n              104,\n              88\n            ],\n            "CodeMeaning": "Muscle",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "muscle",\n            "cid": "7166",\n            "UMLSConceptUID": "C0026845",\n            "CodeValue": "T-13001",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "71616004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              244,\n              214,\n              49\n            ],\n            "CodeMeaning": "Nerve",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "nerve",\n            "cid": "7166",\n            "UMLSConceptUID": "C1268169",\n            "CodeValue": "T-D0598",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "119410002"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              221,\n              130,\n              101\n            ],\n            "CodeMeaning": "Organ",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "organ",\n            "cid": "7166",\n            "UMLSConceptUID": "C1285092",\n            "CodeValue": "T-1A310",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "2861001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              177,\n              122,\n              101\n            ],\n            "CodeMeaning": "Skin",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "skin",\n            "cid": "7166",\n            "UMLSConceptUID": "C1123023",\n            "CodeValue": "T-01000",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "39937001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              152,\n              189,\n              207\n            ],\n            "CodeMeaning": "Tendon",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "tendon",\n            "cid": "7166",\n            "UMLSConceptUID": "C0039508",\n            "CodeValue": "T-17010",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "13024002"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              0,\n              151,\n              206\n            ],\n            "CodeMeaning": "Vein",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "vein",\n            "cid": "7166",\n            "UMLSConceptUID": "C0447146",\n            "CodeValue": "T-4806E",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "181378009"\n          }\n        ],\n        "showAnatomy": true\n      },\n      {\n        "CodeMeaning": "Anatomical Structure",\n        "CodingSchemeDesignator": "SRT",\n        "SNOMEDCTConceptID": "123037004",\n        "cid": "7051",\n        "UMLSConceptUID": "C1268086",\n        "CodeValue": "T-D000A",\n        "contextGroupName": "Segmentation Property Categories",\n        "Type": [\n          {\n            "recommendedDisplayRGBValue": [\n              177,\n              122,\n              101\n            ],\n            "cid": "7154",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "abdomen",\n            "CodeValue": "T-D4000",\n            "UMLSConceptUID": "C0000726",\n            "CodeMeaning": "Abdomen",\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "SNOMEDCTConceptID": "113345001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              186,\n              124,\n              161\n            ],\n            "cid": "7154",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "abdominal cavity",\n            "CodeValue": "T-D4010",\n            "UMLSConceptUID": "C0230168",\n            "CodeMeaning": "Abdominal cavity",\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "SNOMEDCTConceptID": "52731004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              171,\n              85,\n              68\n            ],\n            "cid": "7154",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "muscles of abdominal wall",\n            "CodeValue": "T-14001",\n            "UMLSConceptUID": "C1279385",\n            "CodeMeaning": "Abdominal wall muscle",\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "SNOMEDCTConceptID": "195879000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              60,\n              143,\n              83\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "adenohypophysis",\n            "CodeValue": "T-B1100",\n            "UMLSConceptUID": "C0032008",\n            "CodeMeaning": "Adenohypophysis",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "62818001"\n          },\n          {\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "cid": "7154",\n            "CodeMeaning": "Adrenal gland",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0001625",\n            "CodeValue": "T-B3000",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  249,\n                  186,\n                  150\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right adrenal gland",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  249,\n                  186,\n                  150\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left adrenal gland",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "23451007"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Amygdala",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0002708",\n            "CodeValue": "T-A3230",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  98,\n                  153,\n                  112\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right amygdaloid complex",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  98,\n                  153,\n                  112\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left amygdaloid complex",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "4958002"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              224,\n              199\n            ],\n            "cid": "4031",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "anus",\n            "CodeValue": "T-59900",\n            "UMLSConceptUID": "C0003461",\n            "CodeMeaning": "Anus",\n            "contextGroupName": "Common Anatomic Regions",\n            "SNOMEDCTConceptID": "53505006"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              224,\n              97,\n              76\n            ],\n            "cid": "7152",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "aorta",\n            "CodeValue": "T-42000",\n            "UMLSConceptUID": "C0003483",\n            "CodeMeaning": "Aorta",\n            "contextGroupName": "Cardiac Structure Segmentation Types",\n            "SNOMEDCTConceptID": "15825003"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              218,\n              123,\n              97\n            ],\n            "cid": "6113",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "aortic valve",\n            "CodeValue": "T-35400",\n            "UMLSConceptUID": "C0003501",\n            "CodeMeaning": "Aortic Valve",\n            "contextGroupName": "Mediastinum Anatomy Finding or Feature",\n            "SNOMEDCTConceptID": "34202007"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              244,\n              209\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "arachnoid",\n            "CodeValue": "T-A1220",\n            "UMLSConceptUID": "C0003707",\n            "CodeMeaning": "Arachnoid",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "75042008"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Arcuate Fasciculus",\n            "CodingSchemeDesignator": "FMA",\n            "UMLSConceptUID": "C2329633",\n            "CodeValue": "276650",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  125,\n                  102,\n                  154\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right arcuate fasciculus",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  125,\n                  102,\n                  154\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left arcuate fasciculus",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": ""\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              226,\n              77\n            ],\n            "cid": "7167",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "autonomic nerve",\n            "CodeValue": "T-A9605",\n            "UMLSConceptUID": "C0206250",\n            "CodeMeaning": "Autonomic nerve",\n            "contextGroupName": "Peripheral Nervous System Segmentation Types",\n            "SNOMEDCTConceptID": "53520000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              0,\n              145,\n              30\n            ],\n            "cid": "7154",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "biliary tree",\n            "CodeValue": "T-60610",\n            "UMLSConceptUID": "C0005400",\n            "CodeMeaning": "Bile Duct",\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "SNOMEDCTConceptID": "28273000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              222,\n              154,\n              132\n            ],\n            "cid": "7160",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "urinary bladder",\n            "CodeValue": "T-74000",\n            "UMLSConceptUID": "C0005682",\n            "CodeMeaning": "Bladder",\n            "contextGroupName": "Pelvic Organ Segmentation Types",\n            "SNOMEDCTConceptID": "89837001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              239,\n              172\n            ],\n            "cid": "7155",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "skeleton of thorax",\n            "CodeValue": "T-D0170",\n            "UMLSConceptUID": "C0448157",\n            "CodeMeaning": "Bone of thorax",\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "272710004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              242,\n              206,\n              142\n            ],\n            "cid": "4028",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "skeleton of neck",\n            "CodeValue": "T-D006D",\n            "UMLSConceptUID": "C0730130",\n            "CodeMeaning": "Bone structure of head and/or neck",\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "SNOMEDCTConceptID": "312779009"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              250,\n              250,\n              225\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "brain",\n            "CodeValue": "T-A0100",\n            "UMLSConceptUID": "C0006104",\n            "CodeMeaning": "Brain",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "12738006"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              85,\n              188,\n              255\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "CSF space",\n            "CodeValue": "T-A0109",\n            "UMLSConceptUID": "C0459387",\n            "CodeMeaning": "Brain cerebrospinal fluid pathway",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "280371009"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              88,\n              106,\n              215\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "ventricles of brain",\n            "CodeValue": "T-A1600",\n            "UMLSConceptUID": "C0007799",\n            "CodeMeaning": "Brain ventricle",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "35764002"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Caudate nucleus",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0007461",\n            "CodeValue": "T-A3200",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  30,\n                  111,\n                  85\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right caudate nucleus",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  30,\n                  111,\n                  85\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left caudate nucleus",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "11000004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              244,\n              214,\n              49\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "central nervous system",\n            "CodeValue": "T-A0090",\n            "UMLSConceptUID": "C0927232",\n            "CodeMeaning": "Central nervous system",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "21483005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              194,\n              195,\n              164\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "cerebellar white matter",\n            "CodeValue": "T-A6080",\n            "UMLSConceptUID": "C0152381",\n            "CodeMeaning": "Cerebellar white matter",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "33060004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              88,\n              106,\n              215\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "cerebral aqueduct",\n            "CodeValue": "T-A1800",\n            "UMLSConceptUID": "C0007769",\n            "CodeMeaning": "Cerebral aqueduct",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "80447000"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Cerebral fornix",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0152334",\n            "CodeValue": "T-A2970",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  64,\n                  123,\n                  147\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right fornix",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  64,\n                  123,\n                  147\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left fornix",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "87463005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              128,\n              174,\n              128\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "cerebral cortex",\n            "CodeValue": "T-A2020",\n            "UMLSConceptUID": "C0007776",\n            "CodeMeaning": "Cerebral Grey Matter",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "40146001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              250,\n              250,\n              225\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "cerebral white matter",\n            "CodeValue": "T-A2030",\n            "UMLSConceptUID": "C0152295",\n            "CodeMeaning": "Cerebral White Matter",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "68523003"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              255,\n              207\n            ],\n            "cid": "4031",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "cervical vertebral column",\n            "CodeValue": "T-11501",\n            "UMLSConceptUID": "C0728985",\n            "CodeMeaning": "Cervical spine",\n            "contextGroupName": "Common Anatomic Regions",\n            "SNOMEDCTConceptID": "122494005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              188,\n              95,\n              76\n            ],\n            "cid": "7155",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "muscles of thoracic wall",\n            "CodeValue": "T-14122",\n            "UMLSConceptUID": "C1269825",\n            "CodeMeaning": "Chest wall muscle",\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "372074006"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Cingulum",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0228272",\n            "CodeValue": "T-A2840",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  154,\n                  146,\n                  83\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right cingulum bundle",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  154,\n                  146,\n                  83\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left cingulum bundle",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "37035000"\n          },\n          {\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "cid": "7155",\n            "CodeMeaning": "Clavicle",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0008913",\n            "CodeValue": "T-12310",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  205,\n                  179,\n                  108\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right clavicle",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  205,\n                  179,\n                  108\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left clavicle",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "51299004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              204,\n              168,\n              143\n            ],\n            "cid": "4031",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "colon",\n            "CodeValue": "T-59300",\n            "UMLSConceptUID": "C0009368",\n            "CodeMeaning": "Colon",\n            "contextGroupName": "Common Anatomic Regions",\n            "SNOMEDCTConceptID": "71854001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              97,\n              113,\n              158\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "corpus callosum",\n            "CodeValue": "T-A2700",\n            "UMLSConceptUID": "C0010090",\n            "CodeMeaning": "Corpus callosum",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "88442005"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Corpus striatum",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0010097",\n            "CodeValue": "T-A3100",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  140,\n                  190\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right striatum",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  140,\n                  190\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left striatum",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "31428008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              234,\n              92\n            ],\n            "cid": "7167",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "cranial nerves",\n            "CodeValue": "T-A8000",\n            "UMLSConceptUID": "C0010268",\n            "CodeMeaning": "Cranial nerve",\n            "contextGroupName": "Peripheral Nervous System Segmentation Types",\n            "SNOMEDCTConceptID": "25238003"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Diencephalon",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0012144",\n            "CodeValue": "T-A0102",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  69,\n                  110,\n                  53\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "diencephalon",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              }\n            ],\n            "SNOMEDCTConceptID": "87563008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              253,\n              229\n            ],\n            "cid": "4031",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "duodenum",\n            "CodeValue": "T-58200",\n            "UMLSConceptUID": "C0013303",\n            "CodeMeaning": "Duodenum",\n            "contextGroupName": "Common Anatomic Regions",\n            "SNOMEDCTConceptID": "38848004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              244,\n              209\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "dura mater",\n            "CodeValue": "T-A1120",\n            "UMLSConceptUID": "C0013313",\n            "CodeMeaning": "Dura mater",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "18545000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              211,\n              171,\n              143\n            ],\n            "cid": "7155",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "esophagus",\n            "CodeValue": "T-56000",\n            "UMLSConceptUID": "C0014876",\n            "CodeMeaning": "Esophagus",\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "32849002"\n          },\n          {\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "cid": "4028",\n            "CodeMeaning": "External ear",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0013453",\n            "CodeValue": "T-AB100",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  174,\n                  122,\n                  90\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right external ear",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  174,\n                  122,\n                  90\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left external ear",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "28347008"\n          },\n          {\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "cid": "4028",\n            "CodeMeaning": "Eyeball",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0229242",\n            "CodeValue": "T-AA770",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  194,\n                  142,\n                  0\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right eyeball",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  194,\n                  142,\n                  0\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left eyeball",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "79652003"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              185,\n              135,\n              134\n            ],\n            "cid": "7160",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "female external genitalia",\n            "CodeValue": "T-80010",\n            "UMLSConceptUID": "C0227747",\n            "CodeMeaning": "Female external genitalia",\n            "contextGroupName": "Pelvic Organ Segmentation Types",\n            "SNOMEDCTConceptID": "86969008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              244,\n              170,\n              147\n            ],\n            "cid": "7160",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "female internal genitalia",\n            "CodeValue": "T-80020",\n            "UMLSConceptUID": "C0227748",\n            "CodeMeaning": "Female internal genitalia",\n            "contextGroupName": "Pelvic Organ Segmentation Types",\n            "SNOMEDCTConceptID": "87759004"\n          },\n          {\n            "contextGroupName": "Common Anatomic Regions",\n            "cid": "4031",\n            "CodeMeaning": "Foot",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0016504",\n            "CodeValue": "T-D9700",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right foot",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left foot",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "56459004"\n          },\n          {\n            "contextGroupName": "Common Anatomic Regions",\n            "cid": "4031",\n            "CodeMeaning": "Forearm",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0016536",\n            "CodeValue": "T-D8500",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right forearm",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left forearm",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "14975008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              88,\n              106,\n              215\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "fourth ventricle",\n            "CodeValue": "T-A1820",\n            "UMLSConceptUID": "C0149556",\n            "CodeMeaning": "Fourth ventricle",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "35918002"\n          },\n          {\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "cid": "4028",\n            "CodeMeaning": "Frontal bone",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0016732",\n            "CodeValue": "T-11110",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  203,\n                  179,\n                  77\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right frontal bone",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  203,\n                  179,\n                  77\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left frontal bone",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "74872008"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Frontal lobe",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0016733",\n            "CodeValue": "T-A2200",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  83,\n                  146,\n                  164\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right frontal lobe",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  83,\n                  146,\n                  164\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left frontal lobe",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "83251001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              139,\n              150,\n              98\n            ],\n            "cid": "4040",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "gallbladder",\n            "CodeValue": "T-63000",\n            "UMLSConceptUID": "C0016976",\n            "CodeMeaning": "Gallbladder",\n            "contextGroupName": "Endoscopy Anatomic Regions",\n            "SNOMEDCTConceptID": "28231008"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Globus pallidus",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0017651",\n            "CodeValue": "T-A3500",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  48,\n                  129,\n                  126\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right pallidum",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  48,\n                  129,\n                  126\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left pallidum",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "14738005"\n          },\n          {\n            "contextGroupName": "Common Anatomic Regions",\n            "cid": "4031",\n            "CodeMeaning": "Hand",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0018563",\n            "CodeValue": "T-D8700",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right hand",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left hand",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "85562004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              177,\n              122,\n              101\n            ],\n            "cid": "4031",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "head",\n            "CodeValue": "T-D1100",\n            "UMLSConceptUID": "C0018670",\n            "CodeMeaning": "Head",\n            "contextGroupName": "Common Anatomic Regions",\n            "SNOMEDCTConceptID": "69536005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              206,\n              110,\n              84\n            ],\n            "cid": "7152",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "heart",\n            "CodeValue": "T-32000",\n            "UMLSConceptUID": "C0018787",\n            "CodeMeaning": "Heart",\n            "contextGroupName": "Cardiac Structure Segmentation Types",\n            "SNOMEDCTConceptID": "80891009"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              250,\n              210,\n              139\n            ],\n            "cid": "4028",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "hyoid bone",\n            "CodeValue": "T-11190",\n            "UMLSConceptUID": "C0020417",\n            "CodeMeaning": "Hyoid bone",\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "SNOMEDCTConceptID": "21387005"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Inferior cerebellar peduncle",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0152393",\n            "CodeValue": "T-A6640",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  186,\n                  135,\n                  135\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right inferior cerebellar peduncle",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  186,\n                  135,\n                  135\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left inferior cerebellar peduncle",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "67701001"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Inferior longitudinal fasciculus",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0228273",\n            "CodeValue": "T-A2850",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  159,\n                  116,\n                  163\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right inferior longitudinal fasciculus",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  159,\n                  116,\n                  163\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left inferior longitudinal fasciculus",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "55233005"\n          },\n          {\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "cid": "4028",\n            "CodeMeaning": "Inner ear",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0022889",\n            "CodeValue": "T-AB700",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  229,\n                  147,\n                  118\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right inner ear",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  229,\n                  147,\n                  118\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left inner ear",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "22945000"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Insula",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0021640",\n            "CodeValue": "T-A2610",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  188,\n                  135,\n                  166\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right insular lobe",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  188,\n                  135,\n                  166\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left insular lobe",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "36169008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              233,\n              138,\n              112\n            ],\n            "cid": "6116",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "atrial septum",\n            "CodeValue": "T-32150",\n            "UMLSConceptUID": "C0225836",\n            "CodeMeaning": "Interatrial septum",\n            "contextGroupName": "Muscular Anatomy",\n            "SNOMEDCTConceptID": "58095006"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              195,\n              100,\n              73\n            ],\n            "cid": "6116",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "ventricular septum",\n            "CodeValue": "T-32410",\n            "UMLSConceptUID": "C0225870",\n            "CodeMeaning": "Interventricular septum",\n            "contextGroupName": "Muscular Anatomy",\n            "SNOMEDCTConceptID": "589001"\n          },\n          {\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "cid": "7154",\n            "CodeMeaning": "Kidney",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0022646",\n            "CodeValue": "T-71000",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  185,\n                  102,\n                  83\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right kidney",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  185,\n                  102,\n                  83\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left kidney",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "64033007"\n          },\n          {\n            "contextGroupName": "Endoscopy Anatomic Regions",\n            "cid": "4040",\n            "CodeMeaning": "Knee",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C1456798",\n            "CodeValue": "T-D9200",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right knee",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left knee",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "72696002"\n          },\n          {\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "cid": "4028",\n            "CodeMeaning": "Lacrimal bone",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0222733",\n            "CodeValue": "T-1115A",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  255,\n                  250,\n                  160\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right lacrimal bone",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              }\n            ],\n            "SNOMEDCTConceptID": "6229007"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              150,\n              208,\n              243\n            ],\n            "cid": "4040",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "larynx",\n            "CodeValue": "T-24100",\n            "UMLSConceptUID": "C0023078",\n            "CodeMeaning": "Larynx",\n            "contextGroupName": "Endoscopy Anatomic Regions",\n            "SNOMEDCTConceptID": "4596009"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Lateral corticospinal tract",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0152402",\n            "CodeValue": "T-A7093",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  201,\n                  160,\n                  133\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right corticospinal tract",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  201,\n                  160,\n                  133\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left corticospinal tract",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "461002"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Lateral ventricle",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0152279",\n            "CodeValue": "T-A1650",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  88,\n                  106,\n                  215\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right lateral ventricle",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  88,\n                  106,\n                  215\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left lateral ventricle",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "66720007"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              152,\n              55,\n              13\n            ],\n            "cid": "7152",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "left ventricle of heart",\n            "CodeValue": "T-32600",\n            "UMLSConceptUID": "C0225897",\n            "CodeMeaning": "Left Ventricle",\n            "contextGroupName": "Cardiac Structure Segmentation Types",\n            "SNOMEDCTConceptID": "87878005"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Limbic lobe",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0458337",\n            "CodeValue": "T-A0036",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  154,\n                  150,\n                  201\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right limbic lobe",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  154,\n                  150,\n                  201\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left limbic lobe",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "279215006"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              188,\n              91,\n              95\n            ],\n            "cid": "4028",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "lips",\n            "CodeValue": "T-52000",\n            "UMLSConceptUID": "C0023759",\n            "CodeMeaning": "Lip",\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "SNOMEDCTConceptID": "48477009"\n          },\n          {\n            "contextGroupName": "Common Anatomic Regions",\n            "cid": "4031",\n            "CodeMeaning": "Lower leg",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C1140621",\n            "CodeValue": "T-D9400",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right leg",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left leg",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "30021000"\n          },\n          {\n            "contextGroupName": "Common Anatomic Regions",\n            "cid": "4031",\n            "CodeMeaning": "Lower limb",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0023216",\n            "CodeValue": "T-D9000",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right lower limb",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left lower limb",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "61685007"\n          },\n          {\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "cid": "7155",\n            "CodeMeaning": "Lower lobe of lung",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0225758",\n            "CodeValue": "T-28830",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  224,\n                  186,\n                  162\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "inferior lobe of right lung",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  224,\n                  186,\n                  162\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "inferior lobe of left lung",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "90572001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              212,\n              188,\n              102\n            ],\n            "cid": "4031",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "lumbar vertebral column",\n            "CodeValue": "T-11503",\n            "UMLSConceptUID": "C0024091",\n            "CodeMeaning": "Lumbar spine",\n            "contextGroupName": "Common Anatomic Regions",\n            "SNOMEDCTConceptID": "122496007"\n          },\n          {\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "cid": "7155",\n            "CodeMeaning": "Lung",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0024109",\n            "CodeValue": "T-28000",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  197,\n                  165,\n                  145\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right lung",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  197,\n                  165,\n                  145\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left lung",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "39607008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              185,\n              135,\n              134\n            ],\n            "cid": "7160",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "male external genitalia",\n            "CodeValue": "T-90010",\n            "UMLSConceptUID": "C0227922",\n            "CodeMeaning": "Male external genitalia",\n            "contextGroupName": "Pelvic Organ Segmentation Types",\n            "SNOMEDCTConceptID": "90418005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              216,\n              146,\n              127\n            ],\n            "cid": "7160",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "male internal genitalia",\n            "CodeValue": "T-90020",\n            "UMLSConceptUID": "C0227923",\n            "CodeMeaning": "Male internal genitalia",\n            "contextGroupName": "Pelvic Organ Segmentation Types",\n            "SNOMEDCTConceptID": "38242008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              222,\n              198,\n              101\n            ],\n            "cid": "4031",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "mandible",\n            "CodeValue": "T-11180",\n            "UMLSConceptUID": "C0024687",\n            "CodeMeaning": "Mandible",\n            "contextGroupName": "Common Anatomic Regions",\n            "SNOMEDCTConceptID": "91609006"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Medial Lemniscus",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0228420",\n            "CodeValue": "T-A5271",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  174,\n                  140,\n                  103\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right medial lemniscus",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  174,\n                  140,\n                  103\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left medial lemniscus",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "30114003"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              244,\n              209\n            ],\n            "cid": "7155",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "mediastinum",\n            "CodeValue": "T-D3300",\n            "UMLSConceptUID": "C0025066",\n            "CodeMeaning": "Mediastinum",\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "72410000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              244,\n              209\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "meninges",\n            "CodeValue": "T-A1110",\n            "UMLSConceptUID": "C0025285",\n            "CodeMeaning": "Meninges",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "1231004"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Middle cerebellar peduncle",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0152392",\n            "CodeValue": "T-A6630",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  148,\n                  120,\n                  72\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right middle cerebellar peduncle",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  148,\n                  120,\n                  72\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left middle cerebellar peduncle",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "33723005"\n          },\n          {\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "cid": "4028",\n            "CodeMeaning": "Middle ear",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0013455",\n            "CodeValue": "T-AB300",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  201,\n                  112,\n                  73\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right middle ear",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  201,\n                  112,\n                  73\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left middle ear",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "25342003"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              202,\n              164,\n              140\n            ],\n            "cid": "7155",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "middle lobe of right lung",\n            "CodeValue": "T-28300",\n            "UMLSConceptUID": "C0225757",\n            "CodeMeaning": "Middle lobe of right lung",\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "72481006"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              159,\n              63,\n              27\n            ],\n            "cid": "6113",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "mitral valve",\n            "CodeValue": "T-35300",\n            "UMLSConceptUID": "C0026264",\n            "CodeMeaning": "Mitral Valve",\n            "contextGroupName": "Mediastinum Anatomy Finding or Feature",\n            "SNOMEDCTConceptID": "91134007"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              201,\n              121,\n              77\n            ],\n            "cid": "4028",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "muscles of head",\n            "CodeValue": "T-13100",\n            "UMLSConceptUID": "C0224097",\n            "CodeMeaning": "Muscle of head",\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "SNOMEDCTConceptID": "22688005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              213,\n              124,\n              109\n            ],\n            "cid": "4028",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "muscles of neck",\n            "CodeValue": "T-13300",\n            "UMLSConceptUID": "C0027532",\n            "CodeMeaning": "Muscle of neck",\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "SNOMEDCTConceptID": "81727001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              177,\n              122,\n              101\n            ],\n            "cid": "4031",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "neck",\n            "CodeValue": "T-D1600",\n            "UMLSConceptUID": "C0027530",\n            "CodeMeaning": "Neck",\n            "contextGroupName": "Common Anatomic Regions",\n            "SNOMEDCTConceptID": "45048000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              92,\n              162,\n              109\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "neurohypophysis",\n            "CodeValue": "T-B1200",\n            "UMLSConceptUID": "C0032009",\n            "CodeMeaning": "Neurohypophysis",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "37512009"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Occipital lobe",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0028785",\n            "CodeValue": "T-A2400",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  182,\n                  166,\n                  110\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right occipital lobe",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  182,\n                  166,\n                  110\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left occipital lobe",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "31065004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              234,\n              234,\n              194\n            ],\n            "cid": "7154",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "omentum",\n            "CodeValue": "T-D4600",\n            "UMLSConceptUID": "C0028977",\n            "CodeMeaning": "Omentum",\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "SNOMEDCTConceptID": "27398004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              99,\n              106,\n              24\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "optic chiasm",\n            "CodeValue": "T-A800B",\n            "UMLSConceptUID": "C0029126",\n            "CodeMeaning": "Optic chiasm",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "244453006"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Optic radiation",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0228277",\n            "CodeValue": "T-A2880",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  78,\n                  152,\n                  141\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right optic radiation",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  78,\n                  152,\n                  141\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left optic radiation",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "70105001"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Optic tract",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0152405",\n            "CodeValue": "T-A8060",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  156,\n                  171,\n                  108\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right optic tract",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  156,\n                  171,\n                  108\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left optic tract",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "53238003"\n          },\n          {\n            "contextGroupName": "Pelvic Organ Segmentation Types",\n            "cid": "7160",\n            "CodeMeaning": "Ovary",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0029939",\n            "CodeValue": "T-87000",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  213,\n                  141,\n                  113\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right ovary",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  213,\n                  141,\n                  113\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left ovary",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "15497006"\n          },\n          {\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "cid": "4028",\n            "CodeMeaning": "Palatine bone",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0222734",\n            "CodeValue": "T-11160",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  242,\n                  217,\n                  123\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right palatine bone",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  242,\n                  217,\n                  123\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left palatine bone",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "51283005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              249,\n              180,\n              111\n            ],\n            "cid": "4030",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "pancreas",\n            "CodeValue": "T-65000",\n            "UMLSConceptUID": "C0030274",\n            "CodeMeaning": "Pancreas",\n            "contextGroupName": "CT, MR and PET Anatomy Imaged",\n            "SNOMEDCTConceptID": "15776009"\n          },\n          {\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "cid": "4028",\n            "CodeMeaning": "Parietal bone",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0030558",\n            "CodeValue": "T-11120",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  229,\n                  204,\n                  109\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right parietal bone",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  229,\n                  204,\n                  109\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left parietal bone",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "24924006"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Parietal lobe",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0030560",\n            "CodeValue": "T-A2300",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  141,\n                  93,\n                  137\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right parietal lobe",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  141,\n                  93,\n                  137\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left parietal lobe",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "16630005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              184,\n              122,\n              154\n            ],\n            "cid": "7152",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "pericardial cavity",\n            "CodeValue": "T-39050",\n            "UMLSConceptUID": "C0225972",\n            "CodeMeaning": "Pericardial cavity",\n            "contextGroupName": "Cardiac Structure Segmentation Types",\n            "SNOMEDCTConceptID": "25489000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              244,\n              209\n            ],\n            "cid": "7152",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "pericardium",\n            "CodeValue": "T-39000",\n            "UMLSConceptUID": "C0031050",\n            "CodeMeaning": "Pericardium",\n            "contextGroupName": "Cardiac Structure Segmentation Types",\n            "SNOMEDCTConceptID": "76848001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              224,\n              194,\n              0\n            ],\n            "cid": "7167",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "peripheral nerve",\n            "CodeValue": "T-A0500",\n            "UMLSConceptUID": "C0031119",\n            "CodeMeaning": "Peripheral nerve",\n            "contextGroupName": "Peripheral Nervous System Segmentation Types",\n            "SNOMEDCTConceptID": "84782009"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              216,\n              186,\n              0\n            ],\n            "cid": "7167",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "peripheral nervous system",\n            "CodeValue": "T-A0140",\n            "UMLSConceptUID": "C0206417",\n            "CodeMeaning": "Peripheral nervous system",\n            "contextGroupName": "Peripheral Nervous System Segmentation Types",\n            "SNOMEDCTConceptID": "3058005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              255,\n              220\n            ],\n            "cid": "7154",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "peritoneum",\n            "CodeValue": "T-D4400",\n            "UMLSConceptUID": "C0031153",\n            "CodeMeaning": "Peritioneum",\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "SNOMEDCTConceptID": "15425007"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              204,\n              142,\n              178\n            ],\n            "cid": "7154",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "peritoneal cavity",\n            "CodeValue": "T-D4425",\n            "UMLSConceptUID": "C1704247",\n            "CodeMeaning": "Peritoneal cavity",\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "SNOMEDCTConceptID": "83670000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              184,\n              105,\n              108\n            ],\n            "cid": "4040",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "pharynx",\n            "CodeValue": "T-55000",\n            "UMLSConceptUID": "C0031354",\n            "CodeMeaning": "Pharynx",\n            "contextGroupName": "Endoscopy Anatomic Regions",\n            "SNOMEDCTConceptID": "54066008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              244,\n              209\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "pia mater",\n            "CodeValue": "T-A1280",\n            "UMLSConceptUID": "C0031869",\n            "CodeMeaning": "Pia mater",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "23180006"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              253,\n              135,\n              192\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "pineal gland",\n            "CodeValue": "T-B2000",\n            "UMLSConceptUID": "C0031939",\n            "CodeMeaning": "Pineal Gland",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "45793000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              57,\n              157,\n              110\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "pituitary gland",\n            "CodeValue": "T-B1000",\n            "UMLSConceptUID": "C0032005",\n            "CodeMeaning": "Pituitary",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "56329008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              126,\n              161,\n              197\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "posterior commissure",\n            "CodeValue": "T-A4904",\n            "UMLSConceptUID": "C0152327",\n            "CodeMeaning": "Posterior cerebral commissure",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "279336005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              230,\n              158,\n              140\n            ],\n            "cid": "7160",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "prostate",\n            "CodeValue": "T-92000",\n            "UMLSConceptUID": "C0033572",\n            "CodeMeaning": "Prostate",\n            "contextGroupName": "Pelvic Organ Segmentation Types",\n            "SNOMEDCTConceptID": "41216001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              225,\n              130,\n              104\n            ],\n            "cid": "6113",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "pulmonary valve",\n            "CodeValue": "T-35200",\n            "UMLSConceptUID": "C0034086",\n            "CodeMeaning": "Pulmonary valve",\n            "contextGroupName": "Mediastinum Anatomy Finding or Feature",\n            "SNOMEDCTConceptID": "39057004"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Putamen",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0034169",\n            "CodeValue": "T-A3400",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  210,\n                  157,\n                  166\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right putamen",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  210,\n                  157,\n                  166\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left putamen",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "89278009"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              180,\n              119,\n              153\n            ],\n            "cid": "7154",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "retroperitoneal space",\n            "CodeValue": "T-D4900",\n            "UMLSConceptUID": "C0035359",\n            "CodeMeaning": "Retroperitoneal space",\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "SNOMEDCTConceptID": "82849001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              181,\n              85,\n              57\n            ],\n            "cid": "7152",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "right ventricle of heart",\n            "CodeValue": "T-32500",\n            "UMLSConceptUID": "C0225883",\n            "CodeMeaning": "Right Ventricle",\n            "contextGroupName": "Cardiac Structure Segmentation Types",\n            "SNOMEDCTConceptID": "53085002"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              70,\n              163,\n              117\n            ],\n            "cid": "4028",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "salivary glands",\n            "CodeValue": "T-61007",\n            "UMLSConceptUID": "C0036098",\n            "CodeMeaning": "Salivary gland",\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "SNOMEDCTConceptID": "385294005"\n          },\n          {\n            "contextGroupName": "Pelvic Organ Segmentation Types",\n            "cid": "7160",\n            "CodeMeaning": "Seminal Vesicle",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0036628",\n            "CodeValue": "T-93000",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  245,\n                  172,\n                  147\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right seminal vesicle",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  245,\n                  172,\n                  147\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left seminal vesicle",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "64739004"\n          },\n          {\n            "contextGroupName": "Endoscopy Anatomic Regions",\n            "cid": "4040",\n            "CodeMeaning": "Shoulder",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0037004",\n            "CodeValue": "T-D2220",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right shoulder",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left shoulder",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "16982005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              177,\n              124,\n              92\n            ],\n            "cid": "7154",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "skin of abdominal wall",\n            "CodeValue": "T-02480",\n            "UMLSConceptUID": "C0222166",\n            "CodeMeaning": "Skin of abdomen",\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "SNOMEDCTConceptID": "75093004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              173,\n              121,\n              88\n            ],\n            "cid": "7155",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "skin of thoracic wall",\n            "CodeValue": "T-02424",\n            "UMLSConceptUID": "C0222149",\n            "CodeMeaning": "Skin of chest",\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "74160004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              241,\n              213,\n              144\n            ],\n            "cid": "4031",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "skull",\n            "CodeValue": "T-11100",\n            "UMLSConceptUID": "C0037303",\n            "CodeMeaning": "Skull",\n            "contextGroupName": "Common Anatomic Regions",\n            "SNOMEDCTConceptID": "89546000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              205,\n              167,\n              142\n            ],\n            "cid": "7154",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "small bowel",\n            "CodeValue": "T-58000",\n            "UMLSConceptUID": "C0021852",\n            "CodeMeaning": "Small Intestine",\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "SNOMEDCTConceptID": "30315005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              182,\n              105,\n              107\n            ],\n            "cid": "4028",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "soft palate",\n            "CodeValue": "T-51120",\n            "UMLSConceptUID": "C0030219",\n            "CodeMeaning": "Soft palate",\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "SNOMEDCTConceptID": "49460000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              244,\n              214,\n              49\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "spinal cord",\n            "CodeValue": "T-A7010",\n            "UMLSConceptUID": "C0037925",\n            "CodeMeaning": "Spinal cord",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "2748008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              200,\n              200,\n              215\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "gray matter of spinal cord",\n            "CodeValue": "T-A7020",\n            "UMLSConceptUID": "C0475853",\n            "CodeMeaning": "Spinal cord gray matter",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "12958003"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              250,\n              250,\n              225\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "white matter of spinal cord",\n            "CodeValue": "T-A7070",\n            "UMLSConceptUID": "C0458457",\n            "CodeMeaning": "Spinal cord white matter",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "27088001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              244,\n              217,\n              154\n            ],\n            "cid": "7155",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "sternum",\n            "CodeValue": "T-11210",\n            "UMLSConceptUID": "C0038293",\n            "CodeMeaning": "Sternum",\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "56873002"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              216,\n              132,\n              105\n            ],\n            "cid": "4031",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "stomach",\n            "CodeValue": "T-57000",\n            "UMLSConceptUID": "C0038351",\n            "CodeMeaning": "Stomach",\n            "contextGroupName": "Common Anatomic Regions",\n            "SNOMEDCTConceptID": "69695003"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              88,\n              106,\n              215\n            ],\n            "cid": "7153",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "subarachnoid space",\n            "CodeValue": "T-A1500",\n            "UMLSConceptUID": "C0038527",\n            "CodeMeaning": "Subarachnoid space",\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "35951006"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Substantia nigra",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0038590",\n            "CodeValue": "T-A5160",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  0,\n                  108,\n                  112\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right substantia nigra",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  0,\n                  108,\n                  112\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left substantia nigra",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "70007007"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Superior longitudinal fasciculus",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0228270",\n            "CodeValue": "T-A2820",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  127,\n                  150,\n                  88\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right superior longitudinal fasciculus",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  127,\n                  150,\n                  88\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left superior longitudinal fasciculus",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "89202009"\n          },\n          {\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "cid": "4028",\n            "CodeMeaning": "Temporal bone",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0039484",\n            "CodeValue": "T-11130",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  255,\n                  243,\n                  152\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right temporal bone",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  255,\n                  243,\n                  152\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left temporal bone",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "60911003"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Temporal lobe",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0039485",\n            "CodeValue": "T-A2500",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  162,\n                  115,\n                  105\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right temporal lobe",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  162,\n                  115,\n                  105\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left temporal lobe",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "78277001"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Thalamus",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0458271",\n            "CodeValue": "T-D0593",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  122,\n                  101,\n                  38\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right thalamus",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  122,\n                  101,\n                  38\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left thalamus",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "119406000"\n          },\n          {\n            "contextGroupName": "Common Anatomic Regions",\n            "cid": "4031",\n            "CodeMeaning": "Thigh",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0039866",\n            "CodeValue": "T-D9100",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right thigh",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left thigh",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "68367000"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              226,\n              202,\n              134\n            ],\n            "cid": "7155",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "thoracic vertebral column",\n            "CodeValue": "T-11502",\n            "UMLSConceptUID": "C0581269",\n            "CodeMeaning": "Thoracic spine",\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "122495006"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              177,\n              122,\n              101\n            ],\n            "cid": "7155",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "thorax",\n            "CodeValue": "T-D3000",\n            "UMLSConceptUID": "C0817096",\n            "CodeMeaning": "Thorax",\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "51185008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              47,\n              150,\n              103\n            ],\n            "cid": "7155",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "thymus",\n            "CodeValue": "T-C8000",\n            "UMLSConceptUID": "C0040113",\n            "CodeMeaning": "Thymus",\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "9875009"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              62,\n              162,\n              114\n            ],\n            "cid": "6113",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "thyroid gland",\n            "CodeValue": "T-B6000",\n            "UMLSConceptUID": "C0040132",\n            "CodeMeaning": "Thyroid",\n            "contextGroupName": "Mediastinum Anatomy Finding or Feature",\n            "SNOMEDCTConceptID": "69748006"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              166,\n              84,\n              94\n            ],\n            "cid": "4028",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "tongue",\n            "CodeValue": "T-53000",\n            "UMLSConceptUID": "C0040408",\n            "CodeMeaning": "Tongue",\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "SNOMEDCTConceptID": "21974007"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              250,\n              220\n            ],\n            "cid": "4028",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "teeth",\n            "CodeValue": "T-54010",\n            "UMLSConceptUID": "C0040426",\n            "CodeMeaning": "Tooth",\n            "contextGroupName": "Craniofacial Anatomic Regions",\n            "SNOMEDCTConceptID": "38199008"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              182,\n              228,\n              255\n            ],\n            "cid": "7155",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "trachea",\n            "CodeValue": "T-25000",\n            "UMLSConceptUID": "C0040578",\n            "CodeMeaning": "Trachea",\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "44567001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              166,\n              70,\n              38\n            ],\n            "cid": "6113",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "tricuspid valve",\n            "CodeValue": "T-35100",\n            "UMLSConceptUID": "C0040960",\n            "CodeMeaning": "Tricuspid Valve",\n            "contextGroupName": "Mediastinum Anatomy Finding or Feature",\n            "SNOMEDCTConceptID": "46030003"\n          },\n          {\n            "contextGroupName": "CNS Tissue Segmentation Types",\n            "cid": "7153",\n            "CodeMeaning": "Uncinate fasciculus",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0228271",\n            "CodeValue": "T-A2830",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  106,\n                  174,\n                  155\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right uncinate fasciculus",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  106,\n                  174,\n                  155\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left uncinate fasciculus",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "26230003"\n          },\n          {\n            "contextGroupName": "Common Anatomic Regions",\n            "cid": "4031",\n            "CodeMeaning": "Upper arm",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0446516",\n            "CodeValue": "T-D8200",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right arm",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left arm",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "40983000"\n          },\n          {\n            "contextGroupName": "Common Anatomic Regions",\n            "cid": "4031",\n            "CodeMeaning": "Upper limb",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0016555",\n            "CodeValue": "T-D8000",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right upper limb",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  177,\n                  122,\n                  101\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left upper limb",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "53120007"\n          },\n          {\n            "contextGroupName": "Thoracic Tissue Segmentation Types",\n            "cid": "7155",\n            "CodeMeaning": "Upper lobe of lung",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0225756",\n            "CodeValue": "T-28820",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  172,\n                  138,\n                  115\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "superior lobe of right lung",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  172,\n                  138,\n                  115\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "superior lobe of left lung",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "45653009"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              124,\n              186,\n              223\n            ],\n            "cid": "4031",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "urethra",\n            "CodeValue": "T-75000",\n            "UMLSConceptUID": "C0041967",\n            "CodeMeaning": "Urethra",\n            "contextGroupName": "Common Anatomic Regions",\n            "SNOMEDCTConceptID": "13648007"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              203,\n              136,\n              116\n            ],\n            "cid": "7154",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "urinary system",\n            "CodeValue": "T-70001",\n            "UMLSConceptUID": "C1508753",\n            "CodeMeaning": "Urinary system",\n            "contextGroupName": "Abdominal Organ Segmentation Types",\n            "SNOMEDCTConceptID": "122489005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              255,\n              181,\n              158\n            ],\n            "cid": "7160",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "uterus",\n            "CodeValue": "T-83000",\n            "UMLSConceptUID": "C0042149",\n            "CodeMeaning": "Uterus",\n            "contextGroupName": "Pelvic Organ Segmentation Types",\n            "SNOMEDCTConceptID": "35039007"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              193,\n              123,\n              103\n            ],\n            "cid": "7160",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "vagina",\n            "CodeValue": "T-82000",\n            "UMLSConceptUID": "C0042232",\n            "CodeMeaning": "Vagina",\n            "contextGroupName": "Pelvic Organ Segmentation Types",\n            "SNOMEDCTConceptID": "76784001"\n          },\n          {\n            "contextGroupName": "Pelvic Organ Segmentation Types",\n            "cid": "7160",\n            "CodeMeaning": "Vas deferens",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0042360",\n            "CodeValue": "T-96000",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  241,\n                  172,\n                  151\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right deferent duct",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              },\n              {\n                "recommendedDisplayRGBValue": [\n                  241,\n                  172,\n                  151\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "left deferent duct",\n                "CodeValue": "G-A101",\n                "UMLSConceptUID": "C0205091",\n                "CodeMeaning": "Left",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "7771000"\n              }\n            ],\n            "SNOMEDCTConceptID": "57671007"\n          },\n          {\n            "contextGroupName": "Common Anatomic Regions",\n            "cid": "4031",\n            "CodeMeaning": "Zygoma",\n            "CodingSchemeDesignator": "SRT",\n            "UMLSConceptUID": "C0043539",\n            "CodeValue": "T-11166",\n            "Modifier": [\n              {\n                "recommendedDisplayRGBValue": [\n                  255,\n                  255,\n                  167\n                ],\n                "cid": "244",\n                "CodingSchemeDesignator": "SRT",\n                "3dSlicerLabel": "right zygomatic bone",\n                "CodeValue": "G-A100",\n                "UMLSConceptUID": "C0205090",\n                "CodeMeaning": "Right",\n                "contextGroupName": "Laterality",\n                "SNOMEDCTConceptID": "24028007"\n              }\n            ],\n            "SNOMEDCTConceptID": "13881006"\n          }\n        ],\n        "showAnatomy": false\n      },\n      {\n        "CodeMeaning": "Morphologically Altered Structure",\n        "CodingSchemeDesignator": "SRT",\n        "SNOMEDCTConceptID": "49755003",\n        "cid": "7051",\n        "UMLSConceptUID": "C0221198",\n        "CodeValue": "M-01000",\n        "contextGroupName": "Segmentation Property Categories",\n        "Type": [\n          {\n            "recommendedDisplayRGBValue": [\n              145,\n              60,\n              66\n            ],\n            "CodeMeaning": "Blood clot",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "clot",\n            "cid": "7159",\n            "UMLSConceptUID": "C0302148",\n            "CodeValue": "M-35000",\n            "contextGroupName": "Lesion Segmentation Types",\n            "SNOMEDCTConceptID": "75753009"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              205,\n              205,\n              100\n            ],\n            "CodeMeaning": "Cyst",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "cyst",\n            "cid": "7159",\n            "UMLSConceptUID": "C0010709",\n            "CodeValue": "M-3340A",\n            "contextGroupName": "Lesion Segmentation Types",\n            "SNOMEDCTConceptID": "367643001"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              140,\n              224,\n              228\n            ],\n            "CodeMeaning": "Edema",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "edema",\n            "cid": "7159",\n            "UMLSConceptUID": "C0013604",\n            "CodeValue": "M-36300",\n            "contextGroupName": "Lesion Segmentation Types",\n            "SNOMEDCTConceptID": "79654002"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              150,\n              98,\n              83\n            ],\n            "CodeMeaning": "Embolus",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "embolism",\n            "cid": "7159",\n            "UMLSConceptUID": "C1704212",\n            "CodeValue": "M-35300",\n            "contextGroupName": "Lesion Segmentation Types",\n            "SNOMEDCTConceptID": "55584005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              188,\n              65,\n              28\n            ],\n            "CodeMeaning": "Hemorrhage",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "bleeding",\n            "cid": "7159",\n            "UMLSConceptUID": "C0019080",\n            "CodeValue": "M-37000",\n            "contextGroupName": "Lesion Segmentation Types",\n            "SNOMEDCTConceptID": "50960005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              144,\n              238,\n              144\n            ],\n            "CodeMeaning": "Mass",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "mass",\n            "cid": "7159",\n            "UMLSConceptUID": "C0577559",\n            "CodeValue": "M-03000",\n            "contextGroupName": "Lesion Segmentation Types",\n            "SNOMEDCTConceptID": "4147007"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              216,\n              191,\n              216\n            ],\n            "CodeMeaning": "Necrosis",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "necrosis",\n            "cid": "7159",\n            "UMLSConceptUID": "C0027540",\n            "CodeValue": "M-54000",\n            "contextGroupName": "Lesion Segmentation Types",\n            "SNOMEDCTConceptID": "6574001"\n          }\n        ],\n        "showAnatomy": true\n      },\n      {\n        "CodeMeaning": "Body Substance",\n        "CodingSchemeDesignator": "SRT",\n        "SNOMEDCTConceptID": "91720002",\n        "cid": "",\n        "UMLSConceptUID": "C0504082",\n        "CodeValue": "T-D0080",\n        "contextGroupName": "",\n        "Type": [\n          {\n            "recommendedDisplayRGBValue": [\n              0,\n              145,\n              30\n            ],\n            "CodeMeaning": "Bile",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "bile",\n            "cid": "7166",\n            "UMLSConceptUID": "C0005388",\n            "CodeValue": "T-60650",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "70150004"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              170,\n              250,\n              250\n            ],\n            "CodeMeaning": "Body fluid",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "fluid",\n            "cid": "7166",\n            "UMLSConceptUID": "C0005889",\n            "CodeValue": "T-D0070",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "32457005"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              78,\n              63,\n              0\n            ],\n            "CodeMeaning": "Feces",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "feces",\n            "cid": "7166",\n            "UMLSConceptUID": "C0015733",\n            "CodeValue": "T-59666",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "39477002"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              218,\n              255,\n              255\n            ],\n            "CodeMeaning": "Gas",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "gas",\n            "cid": "7166",\n            "UMLSConceptUID": "C0017110",\n            "CodeValue": "C-10080",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "74947009"\n          },\n          {\n            "recommendedDisplayRGBValue": [\n              214,\n              230,\n              130\n            ],\n            "CodeMeaning": "Urine",\n            "CodingSchemeDesignator": "SRT",\n            "3dSlicerLabel": "urine",\n            "cid": "7166",\n            "UMLSConceptUID": "C0042036",\n            "CodeValue": "T-70060",\n            "contextGroupName": "Common Tissue Segmentation Types",\n            "SNOMEDCTConceptID": "78014005"\n          }\n        ],\n        "showAnatomy": false\n      }\n    ]\n  }\n}');e.default=t,n.exports=e.default},function(n,e,o){"use strict";n.exports=function(n){var e,o,t,a,i,r,c,d,l,u,C,s,m=function(n){var e=n.currentArgs,o=n.previousArgs;p(e)||(S(e),g(e)?(D(e),M(e)):T(o))},p=function(n){return!0===C[n]},S=function(n){C[n]=!0},g=function(n){var e=f(h,[n]);return f(i,[e,c])},D=function(n){u.push(n),t.apply(void 0,n)},T=function(n){s[n]=n,a.apply(void 0,n)},M=function(n){for(var e=0;e<d.length;e+=1){for(var o=d[e],t=n.slice(0),a=0;a<n.length;a+=1)t[a]+=o[a];l.push({currentArgs:t,previousArgs:n})}},h=function(n){return e.apply(void 0,n)},f=function(n,e){try{return n.apply(void 0,e)}catch(n){}},y=function(){},I=function(n,e){return n===e},R=function(){return L(o.length).filter(function(n){var e=U(n);return 0!==e&&(1===e||r)})},L=function(n){for(var e=[],o=function(n){return n.split("").map(function(n){return parseInt(n,10)-1})},t=0;t<Math.pow(3,n);t+=1){var a=N(t.toString(3),"0",n);e.push(o(a))}return e},N=function(n,e,o){return(new Array(o+1).join(e)+n).slice(-o)},U=function(n){for(var e=0,o=0;o<n.length;o+=1)0!==n[o]&&(e+=1);return e},G=function(){var n=[];for(var e in s)s.hasOwnProperty(e)&&n.unshift(s[e]);return n};return e=n.getter,o=n.seed,t=n.onFlood||y,a=n.onBoundary||y,i=n.equals||I,r=n.diagonals||!1,c=h(o),d=R(),l=[],u=[],C={},s={},function(){for(l.push({currentArgs:o});l.length>0;)m(l.pop());return{flooded:u,boundaries:G()}}()}},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t=i(o(0)),a=i(o(5));function i(n){return n&&n.__esModule?n:{default:n}}function r(n){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function c(n,e){for(var o=0;o<e.length;o++){var t=e[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function d(n,e){return!e||"object"!==r(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function l(n,e){return(l=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}var u=t.default.importInternalModule("util/brushUtils").getCircle,C=t.default.store.modules.brush,s=function(n){function e(){var n,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t=Object.assign({},o);return(n=d(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t))).initialConfiguration=t,n}var o,t,i;return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&l(n,e)}(e,a.default),o=e,(t=[{key:"preMouseDownCallback",value:function(n){return this._setCustomGate(n),this._startPainting(n),!0}},{key:"_setCustomGate",value:function(n){for(var e=n.detail,o=e.image,t=o.rows,a=o.columns,i=e.currentPoints.image,r=i.x,c=i.y,d=C.state.radius,l=o.getPixelData(),s=o.slope||1,m=o.intercept||0,p=u(d,t,a,r,c),S=l[p[0][0]+p[0][1]*t],g=S,D=0;D<p.length;D++){var T=l[p[D][0]+p[D][1]*t];T<S&&(S=T),T>g&&(g=T)}S=S*s+m,g=g*s+m,this.gate=[S,g]}},{key:"_gateCircle",value:function(n,e){for(var o=n.image,t=n.getPixelData(),a=this.gate,i=n.slope||1,r=n.intercept||0,c=[],d=0;d<e.length;d++){var l=t[e[d][0]+e[d][1]*o];(l=l*i+r)>=a[0]&&l<=a[1]&&c.push(e[d])}return this._cleanGatedCircle(e,c)}}])&&c(o.prototype,t),i&&c(o,i),e}();e.default=s,n.exports=e.default},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t=o(1),a=o(16),i=o(0),r=l(o(2)),c=l(o(6)),d=l(o(3));function l(n){return n&&n.__esModule?n:{default:n}}function u(n){return(u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function C(n){return function(n){if(Array.isArray(n)){for(var e=0,o=new Array(n.length);e<n.length;e++)o[e]=n[e];return o}}(n)||function(n){if(Symbol.iterator in Object(n)||"[object Arguments]"===Object.prototype.toString.call(n))return Array.from(n)}(n)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}function s(n,e){for(var o=0;o<e.length;o++){var t=e[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function m(n,e){return!e||"object"!==u(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function p(n,e){return(p=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}var S=(0,i.importInternalModule)("util/freehandUtils"),g=S.insertOrDelete,D=S.freehandArea,T=S.calculateFreehandStatistics,M=(0,i.importInternalModule)("drawing/draw"),h=(0,i.importInternalModule)("drawing/drawJoinedLines"),f=(0,i.importInternalModule)("drawing/drawHandles"),y=(0,i.importInternalModule)("drawing/drawLinkedTextBox"),I=(0,i.importInternalModule)("manipulators/moveHandleNearImagePoint"),R=(0,i.importInternalModule)("drawing/getNewContext"),L=i.store.modules,N=(0,i.importInternalModule)("util/numbersWithCommas"),U=(0,i.importInternalModule)("util/pointInsideBoundingBox"),G=(0,i.importInternalModule)("util/calculateSUV"),b=function(n){function e(){var n,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t={configuration:{mouseLocation:{handles:{start:{highlight:!0,active:!0}}},spacing:1,interpolatedHandleRadius:.5,interpolatedAlpha:.5,activeHandleRadius:3,completeHandleRadius:6,completeHandleRadiusTouch:28,alwaysShowHandles:!1,invalidColor:"crimson",currentHandle:0,currentTool:-1}},a=Object.assign(t,o);return(n=m(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,a))).configuration.alwaysShowHandles=!1,n._freehand3DStore=L.freehand3D,n._onMeasurementRemoved=n._onMeasurementRemoved.bind(n),n._drawingMouseUpCallback=n._drawingMouseUpCallback.bind(n),n}var o,l,u;return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&p(n,e)}(e,i.FreehandRoiTool),o=e,(l=[{key:"createNewMeasurement",value:function(n){var e=this._freehand3DStore;if(n&&n.currentPoints&&n.currentPoints.image){var o=(0,t.getEnabledElement)(this.element),a=(0,d.default)(o),i=e.getters.structureSet(a,"DEFAULT"),c=e.getters.activeROIContour(a),l={uid:(0,r.default)(),seriesInstanceUid:a,structureSetUid:"DEFAULT",ROIContourUid:c.uid,referencedROIContour:c,referencedStructureSet:i,visible:!0,active:!0,invalidated:!0,handles:{points:[]}};return l.handles.textBox={active:!1,hasMoved:!1,movesIndependently:!1,drawnIndependently:!0,allowedOutsideImage:!0,hasBoundingBox:!0},e.setters.incrementPolygonCount(a,"DEFAULT",c.uid),l}console.error("required eventData not supplied to tool ".concat(this.name,"'s createNewMeasurement"))}},{key:"addNewMeasurement",value:function(n,e){var o=n.detail;this._addAndSetVolumeIfNoVolumes(),this._drawing=!0,this._startDrawing(n),this._addPoint(o),v(n)}},{key:"_addAndSetVolumeIfNoVolumes",value:function(){var n=(0,t.getEnabledElement)(this.element),e=(0,d.default)(n),o=L.freehand3D,a=o.getters.series(e);a||(o.setters.series(e),a=o.getters.series(e)),o.getters.activeROIContour(e)||o.setters.ROIContour(e,"DEFAULT","Unnamed Lesion")}},{key:"_pointNearHandle",value:function(n,e,o){var i=this._freehand3DStore;if(e.handles&&void 0!==e.handles.points&&!1!==e.visible){for(var r=e.handles.points,c=0;c<r.length;c++){var d=(0,t.pixelToCanvas)(n,r[c]);if(a.point.distance(d,o)<6)return c}return i.state.displayStats&&e.handles.textBox&&U(e.handles.textBox,o)?e.handles.textBox:void 0}}},{key:"preMouseDownCallback",value:function(n){var e=n.detail,o=(0,i.getToolState)(n.currentTarget,this.name);if(!o)return!1;var t=this._pointNearHandleAllTools(e),a=this._freehand3DStore;if(e.event.ctrlKey)return void 0!==t&&t.handleNearby.hasBoundingBox||g.call(this,n,t),v(n),!0;if(t){var r=o.data[t.toolIndex];return a.getters.structureSet(r.seriesInstanceUid,r.structureSetUid).isLocked,!1}}},{key:"handleSelectedCallback",value:function(n,e,o){var t=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"mouse",a=this._freehand3DStore,i=n.detail,r=i.element;if(i.event.metaKey)return this._switchROIContour(n,e),void v(n);if(o.hasBoundingBox&&a.state.displayStats)I(n,this,e,o,t);else{if(a.getters.structureSet(e.seriesInstanceUid,e.structureSetUid).isLocked)return!1;var c=this.configuration;c.dragOrigin={x:o.x,y:o.y};var d=this._pointNearHandleAllTools(i);if(d){var l=d.handleNearby,u=d.toolIndex;this._modifying=!0,c.currentHandle=l,c.currentTool=u,this._activateModify(r),v(n)}}}},{key:"_switchROIContour",value:function(n,e){this._freehand3DStore.setters.activeROIContour(e.seriesInstanceUid,e.structureSetUid,e.ROIContourUid),(0,t.updateImage)(n.detail.element)}},{key:"renderToolData",value:function(n){var e=this,o=n.detail,a=this._freehand3DStore,r=(0,i.getToolState)(n.currentTarget,this.name);if(r){var c,d=o.image,l=o.element,u=this.configuration,s=t.metaData.get("generalSeriesModule",d.imageId);s&&(c=s.modality);for(var m=R(o.canvasContext.canvas),p=i.toolStyle.getToolWidth(),S=function(n){var s=r.data[n],S=s.referencedStructureSet,g=s.referencedROIContour;if(!1===s.visible||!S.visible)return"continue";var R=a.getters.ROIContourIndex(s.seriesInstanceUid,s.structureSetUid,s.ROIContourUid)===a.getters.activeROIContourIndex(s.seriesInstanceUid);M(m,function(n){var r,m=i.toolColors.getColorIfActive(s),M=s.handles.points;if(s.active&&!S.isLocked?s.handles.invalidHandlePlacement?(m=u.invalidColor,r=u.invalidColor):(m=i.toolColors.getColorIfActive(s),r=i.toolColors.getFillColor()):(m=g.color,r=g.color),R&&s.interpolated&&(n.globalAlpha=u.interpolatedAlpha),s.handles.points.length)for(var L=0;L<M.length;L++){var U=[].concat(C(M[L].lines));L!==M.length-1||s.polyBoundingBox||U.push(u.mouseLocation.handles.start),h(n,o.element,s.handles.points[L],U,{color:m})}n.globalAlpha=1;var b,v,x,V={color:m,fill:r};if(R&&s.interpolated?(V.handleRadius=u.interpolatedHandleRadius,f(n,o,M,V)):(u.alwaysShowHandles||s.active&&s.polyBoundingBox)&&(V.handleRadius=u.activeHandleRadius,f(n,o,M,V)),s.canComplete&&(V.handleRadius=u.completeHandleRadius,f(n,o,[M[0]],V)),s.active&&!s.polyBoundingBox&&(V.handleRadius=u.activeHandleRadius,f(n,o,u.mouseLocation.handles,V),f(n,o,[M[0]],V)),!1===s.invalidated)v=s.meanStdDev,x=s.meanStdDevSUV,b=s.area;else if(!s.active){for(var O={left:M[0].x,right:M[0].x,bottom:M[0].y,top:M[0].x},E=0;E<M.length;E++)O.left=Math.min(O.left,M[E].x),O.right=Math.max(O.right,M[E].x),O.bottom=Math.min(O.bottom,M[E].y),O.top=Math.max(O.top,M[E].y);var B={left:O.left,top:O.bottom,width:Math.abs(O.right-O.left),height:Math.abs(O.top-O.bottom)};if(s.polyBoundingBox=B,!d.color){var A=(0,t.getPixels)(l,B.left,B.top,B.width,B.height);v=T.call(e,A,B,M),"PT"===c&&(x={mean:G(d,(v.mean-d.intercept)/d.slope),stdDev:G(d,(v.stdDev-d.intercept)/d.slope)}),v&&!isNaN(v.mean)&&(s.meanStdDev=v,s.meanStdDevSUV=x)}var _=d.columnPixelSpacing||1,w=d.rowPixelSpacing||1;b=D(M,_*w),isNaN(b)||(s.area=b),s.invalidated=!1}if(s.polyBoundingBox&&(a.state.displayStats||s.active)){s.handles.textBox.hasMoved||(s.handles.textBox.x=s.polyBoundingBox.left+s.polyBoundingBox.width,s.handles.textBox.y=s.polyBoundingBox.top+s.polyBoundingBox.height/2);var P=function(n){var e=n.referencedROIContour,o=n.referencedStructureSet,t=n.meanStdDev,a=n.meanStdDevSUV,i=n.area,r=[];r.push(e.name),"DEFAULT"===o.name?r.push("Working ROI Collection"):r.push(o.name);if(t&&void 0!==t.mean){var l="";"CT"===c&&(l=" HU");var u="Mean: ".concat(N(t.mean.toFixed(2))).concat(l),C="StdDev: ".concat(N(t.stdDev.toFixed(2))).concat(l);if(a&&void 0!==a.mean){u+=" SUV: "+N(a.mean.toFixed(2)),C+=" SUV: "+N(a.stdDev.toFixed(2))}r.push(u),r.push(C)}if(i){var s=" mm".concat(String.fromCharCode(178));d.rowPixelSpacing&&d.columnPixelSpacing||(s=" pixels".concat(String.fromCharCode(178)));var m="Area: ".concat(N(i.toFixed(2))).concat(s);r.push(m)}return r.push("".concat(e.polygonCount," contours")),r}.call(e,s);y(n,l,s.handles.textBox,P,M,I,m,p,0,!0)}})},g=0;g<r.data.length;g++)S(g)}function I(n){return n}}},{key:"_endDrawing",value:function(n,e){var o=(0,i.getToolState)(n,this.name),a=this.configuration,r=o.data[a.currentTool],d=r.handles.points;r.active=!1,r.highlight=!1,r.handles.invalidHandlePlacement=!1,void 0!==e&&d[a.currentHandle-1].lines.push(d[0]),this._modifying&&(this._modifying=!1,r.invalidated=!0,r.interpolated=!1),a.currentHandle=0,a.currentTool=-1,r.canComplete=!1,this._drawing&&(this._drawing=!1,this._deactivateDraw(n)),L.freehand3D.state.interpolate&&(0,c.default)(r,n),(0,t.updateImage)(n)}},{key:"_onMeasurementRemoved",value:function(n){var e=n.detail;if(e.toolType===this.name){var o=e.measurementData;this._freehand3DStore.setters.decrementPolygonCount(o.seriesInstanceUid,o.structureSetUid,o.ROIContourUid)}}},{key:"passiveCallback",value:function(n){this._closeToolIfDrawing(n),this._addMeasurementRemovedListener(n)}},{key:"enabledCallback",value:function(n){this._closeToolIfDrawing(n),this._addMeasurementRemovedListener(n)}},{key:"activeCallback",value:function(n){this._addMeasurementRemovedListener(n)}},{key:"disabledCallback",value:function(n){this._closeToolIfDrawing(n),n.removeEventListener(i.EVENTS.MEASUREMENT_REMOVED,this._onMeasurementRemoved)}},{key:"_addMeasurementRemovedListener",value:function(n){n.removeEventListener(i.EVENTS.MEASUREMENT_REMOVED,this._onMeasurementRemoved),n.addEventListener(i.EVENTS.MEASUREMENT_REMOVED,this._onMeasurementRemoved)}}])&&s(o.prototype,l),u&&s(o,u),e}();function v(n){n.stopImmediatePropagation(),n.stopPropagation(),n.preventDefault()}e.default=b,n.exports=e.default},function(n,e){n.exports=o},function(n,e,o){"use strict";function t(n,e){for(var o=0;o<e.length;o++){var t=e[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}Object.defineProperty(e,"__esModule",{value:!0}),e.Polygon=void 0;var a=o(0).store.modules,i=function(){function n(e,o,t,a,i,r,c,d){!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,n),this._polyPoints=this._deepCopyPoints(e),this._sopInstanceUid=o,this._seriesInstanceUid=t,this._structureSetUid=a,this._ROIContourUid=i,this._polygonUid=r,this._frameNumber=c,this._interpolated=d}var e,o,i;return e=n,(o=[{key:"_deepCopyPoints",value:function(n){for(var e=[],o=void 0!==n[0].z,t=0;t<n.length;t++)e.push({x:n[t].x,y:n[t].y}),o&&(e[t].z=n[t].z);return e}},{key:"getFreehandToolData",value:function(n){var e=this._seriesInstanceUid,o=this._structureSetUid,t=this._ROIContourUid,i=a.freehand3D,r=i.getters.ROIContour(e,o,t),c=i.getters.structureSet(e,o),d={uid:this._polygonUid,seriesInstanceUid:e,structureSetUid:o,ROIContourUid:t,referencedROIContour:r,referencedStructureSet:c,visible:!0,active:!1,invalidated:!0,handles:{points:[]}};return this._sopInstanceUid&&(d.sopInstanceUID=this._sopInstanceUid),this._interpolated&&(d.interpolated=!0),this._generatePoints(d.handles.points),d.handles.textBox={active:!1,hasMoved:!1,movesIndependently:!1,drawnIndependently:!0,allowedOutsideImage:!0,hasBoundingBox:!0},d.polyBoundingBox={},d.toBeScaled=n,d}},{key:"_generatePoints",value:function(n){for(var e=0;e<this._polyPoints.length;e++)n.push(this._deepCopyOnePoint(e));for(var o=0;o<n.length;o++)o===n.length-1?n[o].lines.push(n[0]):n[o].lines.push(n[o+1])}},{key:"_deepCopyOnePoint",value:function(n){var e={x:this._polyPoints[n].x,y:this._polyPoints[n].y,lines:[]};return void 0!==this._polyPoints[n].z&&(e.z=this._polyPoints[n].z),e}},{key:"polyPoints",get:function(){return this._polyPoints}},{key:"sopInstanceUid",get:function(){return this._sopInstanceUid}},{key:"uid",get:function(){return this._polygonUid}},{key:"frameNumber",get:function(){return this._frameNumber}}])&&t(e.prototype,o),i&&t(e,i),n}();e.Polygon=i},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=function(n,e){for(var o=n.ROIContourUid,d=function(n,e){for(var o=[],t=a.saveToolState(),i=0;i<n.length;i++){var r=n[i],c=t[r];if(c&&c.freehandRoi){var d=c.freehandRoi.data.filter(function(n){return n.ROIContourUid===e}),l={imageId:r};d.length&&(l.contours=d),o.push(l)}else o.push({imageId:r})}return o}(function(n){return(0,t.getToolState)(n,"stack").data[0].imageIds}(e),o),l=function(n){for(var e=[],o=0;o<n.length;o++)if(n[o].contours){e.push(o);break}for(var t=n.length-1;t>=0;t--)if(n[t].contours){e.push(t);break}return e}(d),u=function(n,e){for(var o=0;o<n.length;o++)if(n[o].contours)for(var t=n[o].contours,a=0;a<t.length;a++)if(t[a].uid===e)return o;return}(d,n.uid),C=[],s=l[0]+1;s<=l[1]-1;s++)if(i(d,s)){var m=c(s,l,d);!m||m[0]!==u&&m[1]!==u||r(m,C)}return{ROIContourData:d,interpolationList:C}};var t=o(0),a=t.globalImageIdSpecificToolStateManager;function i(n,e){return!n[e].contours||1===n[e].contours.length&&n[e].contours[0].interpolated}function r(n,e){e[n[0]]||(e[n[0]]={pair:n,list:[]})}function c(n,e,o){for(var t=[],a=!0,i=n-1;i>=e[0];i--)if(o[i].contours){var r=o[i].contours;if(r[0].interpolated)continue;r.length>1&&(a=!1),t.push(i);break}if(a){for(var c=n+1;c<=e[1];c++)if(o[c].contours){var d=o[c].contours;if(d[0].interpolated)continue;d.length>1&&(a=!1),t.push(c);break}if(a)return t}}n.exports=e.default},function(n,e,o){"use strict";Object.defineProperty(e,"__esModule",{value:!0}),e.default=void 0;var t,a=o(0),i=o(1),r=(t=o(6))&&t.__esModule?t:{default:t};function c(n){return(c="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(n){return typeof n}:function(n){return n&&"function"==typeof Symbol&&n.constructor===Symbol&&n!==Symbol.prototype?"symbol":typeof n})(n)}function d(n,e){for(var o=0;o<e.length;o++){var t=e[o];t.enumerable=t.enumerable||!1,t.configurable=!0,"value"in t&&(t.writable=!0),Object.defineProperty(n,t.key,t)}}function l(n,e){return!e||"object"!==c(e)&&"function"!=typeof e?function(n){if(void 0===n)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return n}(n):e}function u(n,e){return(u=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n})(n,e)}var C=a.store.modules,s=a.store.state,m=function(n){function e(){var n,o=arguments.length>0&&void 0!==arguments[0]?arguments[0]:{};!function(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}(this,e);var t={configuration:{mouseLocation:{handles:{start:{highlight:!0,active:!0}}},minSpacing:1,currentTool:null,dragColor:a.toolColors.getActiveColor(),hoverColor:a.toolColors.getToolColor(),showCursorOnHover:!0,limitRadiusOutsideRegion:!0,hoverCursorFadeAlpha:.5,hoverCursorFadeDistance:1.2}},i=Object.assign(t,o);return(n=l(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,i))).activeMouseUpCallback=n.activeMouseUpCallback.bind(n),n}var o,t,c;return function(n,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");n.prototype=Object.create(e&&e.prototype,{constructor:{value:n,writable:!0,configurable:!0}}),e&&u(n,e)}(e,a.FreehandRoiSculptorTool),o=e,(t=[{key:"_selectFreehandTool",value:function(n){var e=this.configuration,o=n.element,t=this._getClosestFreehandToolOnElement(o,n);if(void 0!==t){var i=(0,a.getToolState)(o,this.referencedToolName).data[t];i.referencedStructureSet.isLocked||(e.hoverColor=i.referencedROIContour.color,e.currentTool=t)}}},{key:"_activeEnd",value:function(n){var e=n.detail,o=e.element,t=this.configuration;this._active=!1,s.isMultiPartToolActive=!1,this._getMouseLocation(e),this._invalidateToolData(e),t.mouseUpRender=!0,this._deactivateSculpt(o);var c=(0,a.getToolState)(o,this.referencedToolName).data[t.currentTool];C.freehand3D.getters.interpolate()&&(0,r.default)(c),(0,i.updateImage)(e.element),function(n){n.stopImmediatePropagation(),n.stopPropagation(),n.preventDefault()}(n)}},{key:"_invalidateToolData",value:function(n){var e=this.configuration,o=n.element,t=(0,a.getToolState)(o,this.referencedToolName).data[e.currentTool];t.invalidated=!0,t.interpolated=!1}}])&&d(o.prototype,t),c&&d(o,c),e}();e.default=m,n.exports=e.default}])});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,